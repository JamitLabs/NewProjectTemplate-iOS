# NewProjectTemplate

[![Build Status](https://app.bitrise.io/app/BITRISE_APP_SLUG/status.svg?token=BITRISE_TOKEN&branch=stable)](https://www.bitrise.io/app/BITRISE_APP_SLUG)

## Requirements

We recommend installing command line tools via
[Homebrew](https://brew.sh/index_de.html) and [Mint](https://github.com/yonaskolb/Mint), respectively:

* Install [Carthage](https://github.com/Carthage/Carthage) (`brew install carthage`)
* Install [SwiftGen](https://github.com/SwiftGen/SwiftGen) (`brew install swiftgen`)
* Install [SwiftLint](https://github.com/realm/SwiftLint) (`brew install swiftlint`)
* Install [ProjLint](https://github.com/JamitLabs/ProjLint) (`mint install JamitLabs/ProjLint`)
* Install [BartyCrouch](https://github.com/Flinesoft/BartyCrouch) (`brew install bartycrouch`)
* Install [Beak](https://github.com/yonaskolb) (`mint install yonaskolb/beak`)

It is recommended to install forks for Carthage and SwiftLint. To do this, run:

```
$ brew remove --force swiftlint
$ mint install git@github.com:Dschee/SwiftLint.git@master swiftlint

$ brew remove --force carthage
$ brew tap Dschee/Carthage-Pro
$ brew install carthage-pro
```



After checking the project out, run this in the project folder:

```
brew
```

Then you should be ready to go!


## Getting Started

Here's a few simple steps to configure this project after checking it out:

1. Run `brew bundle` in the command line and wait for tools to be installed (requires [Homebrew](https://brew.sh/))
2. Run `beak run link` to link the Beak scripts properly for execution, then restart your terminal
3. Run `project install` to make sure you have all required tools and dependencies installed

That's it, you should now be able to build the project successfully.

## Scripts

Once the project is set up as above, the following script commands should be available in the root of the project:

* `deps install`: Install all dependencies in the currently specified version.
* `deps update`: Updates all dependencies according to their version specifications.
* `tools install`: Installes missing tools & updates all existing to their latest versions.

Feel free to add more scripts in the `Scripts` folder. To edit them, run `beak edit -p Scripts/<file>.swift` which will start [Beak's edit mode](https://github.com/yonaskolb/Beak#edit-the-swift-file). Once you are done and saved your changes, make sure to run `beak run link` to ensure all scripts are still executables. (The edit mode of Beak will destroy the rights on save.)
